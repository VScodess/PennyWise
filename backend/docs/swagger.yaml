definitions:
  handlers.CategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  handlers.TransactionRequest:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      description:
        type: string
      transaction_date:
        type: string
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      transaction_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/categories:
    get:
      description: Retrieves all categories.
      produces:
      - application/json
      responses:
        "200":
          description: List of Categories
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Creates a new category for transactions and budgets.
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handlers.CategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Category
      tags:
      - categories
  /api/categories/{id}:
    delete:
      description: Deletes a category by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Category
      tags:
      - categories
    get:
      description: Retrieves a category by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Updates an existing category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        schema:
          $ref: '#/definitions/handlers.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Category
      tags:
      - categories
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: User Login
      tags:
      - auth
  /api/signup:
    post:
      consumes:
      - application/json
      description: Registers a new user with the given username, email, and password.
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created User
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User Registration
      tags:
      - auth
  /api/transactions:
    get:
      description: Retrieves a list of transactions for the authenticated user, with
        optional filtering by date, category, etc.
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Transactions
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Invalid or missing user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Creates a new transaction for the authenticated user, linking it
        to a specific category.
      parameters:
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: Deletes a specific transaction by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid transaction ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Transaction
      tags:
      - transactions
    get:
      description: Retrieves a single transaction by its ID for the authenticated
        user.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid transaction ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Transaction by ID
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Updates an existing transaction, allowing changes to the amount,
        category, description, or date.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Transaction
      tags:
      - transactions
swagger: "2.0"
