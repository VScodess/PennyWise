definitions:
  budget.CategoryBudgetHistoryResponse:
    properties:
      category_id:
        type: integer
      history:
        items:
          $ref: '#/definitions/budget.MonthlyBudgetResponse'
        type: array
    type: object
  budget.MonthlyBudgetResponse:
    properties:
      amount_limit:
        type: number
      month:
        type: string
      remaining_amount:
        type: number
      spent_amount:
        type: number
      year:
        type: integer
    type: object
  handlers.BudgetRequest:
    properties:
      amount_limit:
        type: number
      budget_month:
        type: string
      budget_year:
        type: integer
      category_id:
        type: integer
    type: object
  handlers.CategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: john_doe
        type: string
    type: object
  handlers.SignUpRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      password:
        example: password123
        type: string
      username:
        example: john_doe
        type: string
    type: object
  handlers.TransactionRequest:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      description:
        type: string
      transaction_date:
        type: string
    type: object
  handlers.UpdateBudgetRequest:
    properties:
      amount_limit:
        type: number
    type: object
  handlers.UserResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  models.Budget:
    properties:
      amount_limit:
        type: number
      budget_month:
        type: string
      budget_year:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      remaining_amount:
        type: number
      spent_amount:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      transaction_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/budgets:
    get:
      description: Retrieves all budgets associated with the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: List of Budgets
          schema:
            items:
              $ref: '#/definitions/models.Budget'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Budgets for User
      tags:
      - budgets
    post:
      consumes:
      - application/json
      description: Creates a new budget for a user, either overall or for a specific
        category.
      parameters:
      - description: Budget Data
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/handlers.BudgetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Budget
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Budget
      tags:
      - budgets
  /api/budgets/{id}:
    delete:
      description: Deletes a budget by its ID.
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Budget ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Budget not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Budget
      tags:
      - budgets
    get:
      description: Retrieves a budget by its ID.
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Budget
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Invalid Budget ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Budget not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Budget by ID
      tags:
      - budgets
    put:
      consumes:
      - application/json
      description: Updates an existing budget by ID.
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Budget Data
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateBudgetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Budget
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Budget not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Budget
      tags:
      - budgets
  /api/budgets/category/{categoryID}:
    get:
      description: Retrieves the budget for the specified category ID for the current
        month and year for the logged-in user.
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Budget
          schema:
            $ref: '#/definitions/models.Budget'
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Budget not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Budget by Category ID
      tags:
      - budgets
  /api/budgets/category/{categoryID}/history:
    get:
      description: Retrieves the last 4 months of budget and spending for the given
        category.
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Budget History
          schema:
            $ref: '#/definitions/budget.CategoryBudgetHistoryResponse'
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Budget History by Category
      tags:
      - budgets
  /api/budgets/overall:
    get:
      description: Retrieves the overall budget, including all categories, for the
        authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: Overall Budget
          schema:
            $ref: '#/definitions/models.Budget'
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Overall Budget
      tags:
      - budgets
  /api/categories:
    get:
      description: Retrieves all categories for the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: List of Categories
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get All Categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Creates a new category for transactions and budgets.
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handlers.CategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Category
      tags:
      - categories
  /api/categories/{id}:
    delete:
      description: Deletes a category by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Category
      tags:
      - categories
    get:
      description: Retrieves a category by its ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid Category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Updates an existing category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        schema:
          $ref: '#/definitions/handlers.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Category
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Category
      tags:
      - categories
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: Login Data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: User Login
      tags:
      - auth
  /api/signup:
    post:
      consumes:
      - application/json
      description: Registers a new user with the given username, email, and password.
      parameters:
      - description: Sign Up Data
        in: body
        name: signupData
        required: true
        schema:
          $ref: '#/definitions/handlers.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created User
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User Registration
      tags:
      - auth
  /api/transactions:
    get:
      description: Retrieves a list of transactions for the authenticated user, with
        optional filtering by date, category, etc.
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of Transactions
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Invalid or missing user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Transactions
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Creates a new transaction for the authenticated user, linking it
        to a specific category.
      parameters:
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create Transaction
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: Deletes a specific transaction by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid transaction ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete Transaction
      tags:
      - transactions
    get:
      description: Retrieves a single transaction by its ID for the authenticated
        user.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid transaction ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get Transaction by ID
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Updates an existing transaction, allowing changes to the amount,
        category, description, or date.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Transaction
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: Invalid request payload
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Transaction not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update Transaction
      tags:
      - transactions
swagger: "2.0"
